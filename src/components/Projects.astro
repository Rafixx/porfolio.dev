---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import React from "./icons/React.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import NodeJS from "./icons/NodeJS.astro";
import Postgresql from "./icons/Postgresql.astro";
import MySQL from "./icons/MySQL.astro";
import AstroFW from "./icons/AstroFW.astro";
import ProjectModal from "./ProjectModal.astro";

type tLang = (str: any) => any;

const lang = getLangFromUrl(Astro.url);
const t: tLang = useTranslations(lang);

type TagType = {
  name: string;
  class: string;
  icon: (_props: Record<string, any>) => any;
};

type TagsType = {
  [key: string]: TagType;
};

const TAGS: TagsType = {
  nextjs: {
    name: "Next.js",
    class: "bg-gray-600 text-white dark:bg-white dark:text-[#000]",
    icon: NextJS,
  },
  tailwindcss: {
    name: "Tailwind CSS",
    class: "bg-emerald-100	 text-black",
    icon: Tailwind,
  },
  react: {
    name: "React",
    class: "bg-gray-600 text-white dark:bg-blue-600 ",
    icon: React,
  },
  nodejs: {
    name: "Node.js",
    class: "bg-green-600 text-white",
    icon: NodeJS,
  },
  postgresql: {
    name: "PostgreSQL",
    class: "bg-[#336791] text-white",
    icon: Postgresql,
  },
  mysql: {
    name: "MySQL",
    class: "bg-sky-100 text-black dark:bg-gray-100 dark:text-black",
    icon: MySQL,
  },
  astro: {
    name: "Astro",
    class: "bg-indigo-100 text-black dark:bg-white dark:text-[#000]",
    icon: AstroFW,
  },
};

interface ProjectType {
  image1: string;
  image2: string;
  image3: string;
  image4: string;
  imageAlt: string;
  title: string;
  description: string;
  tags: string[];
  link?: string;
  github?: string;
  modal_id: string;
}
const PROJECTS: ProjectType[] = t("projects");
---

<div class="flex flex-col gap-y-16 w-full">
  {
    PROJECTS.map(
      ({
        image1,
        image2,
        image3,
        image4,
        title,
        description,
        tags,
        link,
        github,
        modal_id,
      }) => (
        <div class="flex flex-row gap-x-8 w-full">
          <div class="w-1/2">
            <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
              <img
                data-modal-target={modal_id}
                data-modal-toggle={modal_id}
                src={image1}
                class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
                alt="..."
              />
            </div>
          </div>
          <div class="w-2/3 ">
            <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
              <div class="w-full">
                <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
                  {title}
                </h3>
                <div class="flex flex-wrap mt-2">
                  <ul class="flex flex-wrap mb-2 gap-x-2">
                    {tags.map((item) => {
                      const tag: TagType = TAGS[item];
                      if (tag) {
                        return (
                          <li>
                            <span
                              class={`flex gap-x-2 mt-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                            >
                              <tag.icon class="size-4" />
                              {tag.name}
                            </span>
                          </li>
                        );
                      }
                    })}
                  </ul>

                  <div class="mt-2 text-gray-700 dark:text-gray-400">
                    {description}
                  </div>
                  <footer class="flex items-end justify-start mt-4 gap-x-4">
                    {github && (
                      <LinkButton href={github}>
                        <GitHub class="size-6" />
                        Code
                      </LinkButton>
                    )}
                    {link && (
                      <LinkButton href={link}>
                        <Link class="size-4" />
                        Preview
                      </LinkButton>
                    )}
                  </footer>
                </div>
              </div>
            </article>
          </div>
        </div>
      )
    )
  }
</div>
<ProjectModal />
